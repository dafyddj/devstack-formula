#!/bin/bash
# Sample ``local.conf`` for user-configurable variables in ``stack.sh``
####################
## Managed by Salt
#####################

# NOTE: Copy this file to the root DevStack directory for it to work properly.

# ``local.conf`` is a user-maintained settings file that is sourced from ``stackrc``.
# This gives it the ability to override any variables set in ``stackrc``.
# Also, most of the settings in ``stack.sh`` are written to only be set if no
# value has already been set; this lets ``local.conf`` effectively override the
# default values.

# This is a collection of some of the settings we have found to be useful
# in our DevStack development environments. Additional settings are described
# in https://docs.openstack.org/devstack/latest/configuration.html#local-conf
# These should be considered as samples and are unsupported DevStack code.

# The ``localrc`` section replaces the old ``localrc`` configuration file.
# Note that if ``localrc`` is present it will be used in favor of this section.
[[local|localrc]]

# Minimal Contents
# ----------------

# While ``stack.sh`` is happy to run without ``localrc``, devlife is better when
# there are a few minimal variables set:

# If the ``*_PASSWORD`` variables are not set here you will be prompted to enter
# values for them by ``stack.sh``and they will be added to ``local.conf``.
ADMIN_PASSWORD=${ADMIN_PASSWORD:-{{'devstack' if not devstack.local.admin_password else devstack.local.admin_password }}}
DATABASE_PASSWORD=${DATABASE_PASSWORD:-{{'stackdb' if not devstack.local.database_password else devstack.local.database_password }}}
RABBIT_PASSWORD=${RABBIT_PASSWORD:-{{'stackqueue' if not devstack.local.rabbit_password else devstack.local.rabbit_password }}}
SERVICE_PASSWORD=${ADMIN_PASSWORD}
SERVICE_TOKEN=${SERVICE_TOKEN:-{{'devstack' if 'service_token' not in devstack.local else devstack.local.service_token }}}

# ``HOST_IP`` and ``HOST_IPV6`` should be set manually for best results if
# the NIC configuration of the host is unusual, i.e. ``eth1`` has the default
# route but ``eth0`` is the public interface.  They are auto-detected in
# ``stack.sh`` but often is indeterminate on later runs due to the IP moving
# from an Ethernet interface to a bridge on the host. Setting it here also
# makes it available for ``openrc`` to include when setting ``OS_AUTH_URL``.
# Neither is set by default.
HOST_IP=${HOST_IP:-{{ devstack.local.host_ipv4 }}}
HOST_IPV6=${HOST_IPV6:-{{ devstack.local.host_ipv6 }}}

HOST_NAME={{ grains.host if not devstack.local.host_name else devstack.local.host_name }}
SERVICE_HOST=${SERVICE_HOST:-$HOST_IP}
MYSQL_HOST=${MYSQL_HOST:-{{ devstack.local.db_host or '127.0.0.1' }}}
DATABASE_HOST=${DATABASE_HOST:-{{ devstack.local.db_host or '127.0.0.1' }}}
RABBIT_HOST=${RABBIT_HOST:-$HOST_IP}
GLANCE_HOSTPORT=${GLANCE_HOSTPORT:-$HOST_IP:9292}

ENABLED_SERVICES={{ devstack.local.enabled_services or "" }}
DEST=${DEST:-{{ "/opt/stack" if not devstack.dir.dest else devstack.dir.dest }}}
DATA_DIR=${DATA_DIR:-{{ '/opt/stack' if not devstack.dir.dest else devstack.dir.dest }}/data}

GIT_BASE=${GIT_BASE:-{{ "https://git.openstack.org" if not devstack.local.git_base else devstack.local.git_base }}}
GIT_BRANCH=${GIT_BRANCH:-{{ "master" if not devstack.local.git_branch else devstack.local.git_branch }}}
RECLONE={{ devstack.local.reclone or "no" }}


# Logging
# -------

# By default ``stack.sh`` output only goes to the terminal where it runs.  It can
# be configured to additionally log to a file by setting ``LOGFILE`` to the full
# path of the destination log file.  A timestamp will be appended to the given name.
# Added by Salt
LOGFILE={{ devstack.dir.log or "${DEST}/logs" }}/{{ devstack.local.logfile }}
VERBOSE={{ devstack.local.verbose or "" }}
ENABLE_DEBUG_LOG_LEVEL={{ devstack.local.enable_debug_log_level or "" }}
ENABLE_VERBOSE_LOG_LEVEL={{ devstack.local.enable_verbose_log_level or "" }}

# Old log files are automatically removed after 7 days to keep things neat.  Change
# the number of days by setting ``LOGDAYS``.
LOGDAYS={{ devstack.local.logdays or "2" }}

# Nova logs will be colorized if ``SYSLOG`` is not set; turn this off by setting
# ``LOG_COLOR`` false.
#LOG_COLOR=False
LOG_COLOR={{ devstack.local.log_color or "True" }}


# Using branches
# --------------
# Added by Salt
CINDER_BRANCH=${CINDER_BRANCH:-{{ devstack.local.cinder_branch or devstack.local.git_branch }}}
GLANCE_BRANCH=${GLANCE_BRANCH:-{{ devstack.local.glance_branch or devstack.local.git_branch }}}
HORIZON_BRANCH=${HORIZON_BRANCH:-{{ devstack.local.horizon_branch or devstack.local.git_branch }}}
KEYSTONE_BRANCH=${KEYSTONE_BRANCH:-{{ devstack.local.keystone_branch or devstack.local.git_branch }}}
KEYSTONECLIENT_BRANCH=${KEYSTONECLIENT_BRANCH:-{{ devstack.local.keystoneclient_branch or devstack.local.git_branch }}}
NOVA_BRANCH=${NOVA_BRANCH:-{{ devstack.local.nova_branch or devstack.local.git_branch }}}
NOVACLIENT_BRANCH=${NOVACLIENT_BRANCH:-{{ devstack.local.novaclient_branch or devstack.local.git_branch }}}
NEUTRON_BRANCH=${NEUTRON_BRANCH:-{{ devstack.local.neutron_branch or devstack.local.git_branch }}}
SWIFT_BRANCH=${SWIFT_BRANCH:-{{ devstack.local.swift_branch or devstack.local.git_branch }}}


# Using git versions of clients
# -----------------------------
# By default clients are installed from pip.  See LIBS_FROM_GIT in
# stackrc for details on getting clients from specific branches or
# revisions.  e.g.
# LIBS_FROM_GIT="python-ironicclient"
# IRONICCLIENT_BRANCH=refs/changes/44/2.../1

# Swift
# -----

# Swift is now used as the back-end for the S3-like object store. Setting the
# hash value is required and you will be prompted for it if Swift is enabled
# so just set it to something already:
SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5

# For development purposes the default of 3 replicas is usually not required.
# Set this to 1 to save some resources:
SWIFT_REPLICAS=1

# The data for Swift is stored by default in (``$DEST/data/swift``),
# or (``$DATA_DIR/swift``) if ``DATA_DIR`` has been set, and can be
# moved by setting ``SWIFT_DATA_DIR``. The directory will be created
# if it does not exist.
SWIFT_DATA_DIR=$DEST/data

# Added by Salt
## Neutron
# -----
Q_USE_SECGROUP=${Q_USE_SECGROUP:-True}
FLOATING_RANGE=${FLOATING_RANGE:-}
IPV4_ADDRS_SAFE_TO_USE=${IPV4_ADDRS_SAFE_TO_USE:-}
Q_FLOATING_ALLOCATION_POOL=${Q_FLOATING_ALLOCATION_POOL:-}

    {%- if "ip4_gw" in grains %}
PUBLIC_NETWORK_GATEWAY=${PUBLIC_NETWORK_GATEWAY:-{{ grains.ip4_gw }}}
    {%- elif grains.os_family == 'FreeBSD' %}
        {%- set ip4_gw = salt['cmd.run']("netstat -r | grep ^default | awk '{print $2}'") %}
PUBLIC_NETWORK_GATEWAY=${PUBLIC_NETWORK_GATEWAY:-{{ ip4_gw }}}
    {%- endif %}
PUBLIC_INTERFACE=${PUBLIC_INTERFACE:-}

# Open vSwitch provider networking configuration
Q_USE_PROVIDERNET_FOR_PUBLIC=${Q_USE_PROVIDERNET_FOR_PUBLIC:-True}
OVS_PHYSICAL_BRIDGE=${OVS_PHYSICAL_BRIDGE:-br-ex}
PUBLIC_BRIDGE=${OVS_PHYSICAL_BRIDGE:-br-ex}
OVS_BRIDGE_MAPPINGS=${OVS_BRIDGE_MAPPINGS:-public:br-ex}

ODL_MGR_IP=${HOST_IP:-'127.0.0.1' }}}

# Used by openrc
#---------------
# Ref: https://docs.openstack.org/devstack/latest/configuration.html#local-conf
OS_PASSWORD=${OS_PASSWORD:-{{'devstack' if 'os_password' not in devstack.local else devstack.local.os_password }}}
